# Group_A_Practicle_No_1
/*Implement a class Complex which represents the Complex Number data type. Implement the
following
1. Constructor (including a default constructor which creates the complex number 0+0i).
2. Overload operator+ to add two complex numbers.
3. Overload operator* to multiply two complex numbers.
4. Overload operators << and >> to print and read Complex Numbers.*/


#include<iostream>
using namespace std;
class complex
{
	
	public:
		int real;
	     int img;
		complex()
		{
			real=0;img=0;
		}
		complex(int a,int b)
		{
			real=a; img=b;
		}
		complex operator+(complex &);
		friend void operator<<(ostream &,complex &);
		complex operator*(complex&);
	
};
complex complex::operator+(complex&c2)
{
	complex result;
	result.real=real+c2.real;
	result.img=img+c2.img;
	return result;
}
complex complex::operator*(complex&c2)
{
	complex result;
	result.real=((real*c2.real)-(img*c2.img));
	result.img=((real*c2.img)+(c2.real*img));
	return result;
	
}

void operator<<(ostream &out,complex &c3)
{
	out<<"\n"<<c3.real<<"+"<<c3.img<<"i";
	out<<"\n";
}
	void operator>>(istream &in,complex&c)
	{
		cout<<"\nEnter the real part for complex number=";
		in>>c.real;
		cout<<"\nEnter the imagenary part for complex number=";
		in>>c.img;
	}
	int main()
	{
		complex c1;
		complex c2;
		complex c3;
		
		cin>>c1;
		cin>>c2;
		
		c3=c1+c2;
		cout<<c3;
		
		c3=c1*c2;
		cout<<c3;
	}
